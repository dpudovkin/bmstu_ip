{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction show_result(data) {\n  var result = document.getElementById(\"result\");\n  var text = \"<table border=\\\"1\\\">   <caption>Результат</caption>\";\n\n  for (var i = 0; i < data.size(); i++) {\n    text += \"<tr>\" + \"<td>\" + data[i][0] + \"</td>\" + \"<td>\" + data[i][1] + \"</td>\" + \"</tr>\";\n  }\n\n  text += \"</tabel>\";\n  result.innerHTML = text;\n}\n\nwindow.addEventListener(\"load\", function () {\n  var element = document.querySelector(\"#number_form\");\n  element.addEventListener(\"ajax:success\", function (event) {\n    var _event$detail = _slicedToArray(event.detail, 3);\n\n    data = _event$detail[0];\n    status = _event$detail[1];\n    xhr = _event$detail[2];\n    show_result(data);\n  });\n  element.addEventListener(\"ajax:error\", function () {\n    $(\"#result\").html(\"<p>Ошибка при AJAX-запросе</p>\");\n  });\n});","map":{"version":3,"sources":["/home/dima/Documents/bmstu_ip/laba9/app/javascript/packs/number.js"],"names":["show_result","data","result","document","getElementById","text","i","size","innerHTML","window","addEventListener","element","querySelector","event","detail","status","xhr","$","html"],"mappings":";;;;;;;;;;;;AACA,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACvB,MAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAb;AACA,MAAIC,IAAI,GAAG,qDAAX;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,IAAI,CAACM,IAAL,EAAhB,EAA6BD,CAAC,EAA9B,EAAiC;AAC7BD,IAAAA,IAAI,IAAE,SAAO,MAAP,GAAcJ,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAd,GAAyB,OAAzB,GAAiC,MAAjC,GAAwCL,IAAI,CAACK,CAAD,CAAJ,CAAQ,CAAR,CAAxC,GAAmD,OAAnD,GAA2D,OAAjE;AACH;;AACDD,EAAAA,IAAI,IAAE,UAAN;AACAH,EAAAA,MAAM,CAACM,SAAP,GAAmBH,IAAnB;AACH;;AAEDI,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAClC,MAAMC,OAAO,GAAGR,QAAQ,CAACS,aAAT,CAAuB,cAAvB,CAAhB;AACAD,EAAAA,OAAO,CAACD,gBAAR,CAAyB,cAAzB,EAAyC,UAACG,KAAD,EAAW;AAAA,uCAC1BA,KAAK,CAACC,MADoB;;AAC/Cb,IAAAA,IAD+C;AACzCc,IAAAA,MADyC;AACjCC,IAAAA,GADiC;AAEhDhB,IAAAA,WAAW,CAACC,IAAD,CAAX;AACH,GAHD;AAIAU,EAAAA,OAAO,CAACD,gBAAR,CAAyB,YAAzB,EAAuC,YAAM;AACzCO,IAAAA,CAAC,CAAC,SAAD,CAAD,CAAaC,IAAb,CAAkB,gCAAlB;AACH,GAFD;AAGH,CATD","sourcesContent":["\nfunction show_result(data) {\n    let result = document.getElementById(\"result\");\n    let text = \"<table border=\\\"1\\\">   <caption>Результат</caption>\";\n    for (let i=0; i<data.size(); i++){\n        text+=\"<tr>\"+\"<td>\"+data[i][0]+\"</td>\"+\"<td>\"+data[i][1]+\"</td>\"+\"</tr>\"\n    }\n    text+=\"</tabel>\"\n    result.innerHTML = text;\n}\n\nwindow.addEventListener(\"load\", () => {\n    const element = document.querySelector(\"#number_form\");\n    element.addEventListener(\"ajax:success\", (event) => {\n        [data, status, xhr] = event.detail;\n        show_result(data)\n    });\n    element.addEventListener(\"ajax:error\", () => {\n        $(\"#result\").html(\"<p>Ошибка при AJAX-запросе</p>\")\n    });\n});\n"]},"metadata":{},"sourceType":"module"}